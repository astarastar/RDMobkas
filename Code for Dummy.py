# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AjWKbOqaEt_kn31Mrie1LVrG5DecpOhE
"""

!pip install faker
from faker import Faker
from tabulate import tabulate
import random
from datetime import datetime, timedelta
import pandas as pd

FAKER = Faker('id_ID')
cities = pd.read_csv('/content/drive/MyDrive/cities.csv', sep=";")
cities['coordinate'] = [', '.join(i) for i in zip(cities["latitude"].map(str),cities["longitude"].map(str))]
cities.drop(columns=['latitude','longitude'], inplace=True)
cities.rename(columns={'kota_id':'city_id','nama_kota':'city_name'}, inplace=True)
list_city_id = cities['city_id'].values.tolist()

def duplicate_car_table(n_duplicate, is_print):
    # Buat table
    table = pd.read_csv('/content/drive/MyDrive/car_products.csv', sep=";")
    table_copy = table.copy()
    for i in range(n_duplicate):
        table_copy['year'] = [random.choice(range(2014,2022)) for i in range(len(table_copy['year']))]

        table_copy_price = table_copy['price'].values.tolist()
        random.shuffle(table_copy_price)
        table_copy['price'] = table_copy_price
        table = table.append(table_copy)

    table['product_id'] = [i+1 for i in range(len(table['product_id']))]
    table['car_type'] = [random.choice(['Automatic','Manual']) for i in range(len(table['product_id']))]
    table = table[['product_id','brand','model','body_type','car_type','year','price']]

    # Print table
    if is_print:
        print(table)

    return table

cars = duplicate_car_table(3, is_print=True)

"""# Bagian Baru"""

def generate_name(n_name):
    names = list()
    while len(names) < n_name:

        first_name = FAKER.first_name()
        last_name = FAKER.last_name()

        full_name = (f'{first_name} {last_name}')
        if full_name not in names:
            names.append(full_name)

    return names

def user_table(n_cust, is_print):
    # Buat table
    table = pd.DataFrame()
    table['user_id'] = [i+1 for i in range(n_cust)]
    names = generate_name(n_cust)
    table['user_name'] = [i for i in names]
    table['email'] = [f"{name.lower().replace(' ', '')}@{FAKER.free_email_domain()}" \
                      for name in names]
    table['phone_number'] = [FAKER.phone_number() for i in range(n_cust)]
    table['city_id'] = [random.choice(list_city_id) for i in range(len(table['user_id']))]

    # Print table
    if is_print:
        print(table)

    return table
# membuat data table sellers
sellers = user_table(50,is_print=True)

sellers.rename(columns={'user_id':'seller_id', 'user_name':'seller_name'}, inplace=True)

# membuat data table buyers
buyers = user_table(50,is_print=True)

buyers.rename(columns={'user_id':'buyer_id', 'user_name':'buyer_id'}, inplace=True)

def ads_table(n_ads, is_print):

    start_date = datetime(2022, 1, 1)

    end_date = datetime(2022, 6, 30)

    # Buat table
    table = pd.DataFrame()
    table['ads_id'] = [i+1 for i in range(n_ads)]
    table['seller_id'] = [random.choice(range(1,50)) for i in range(n_ads)]
    table['product_id'] = [random.choice(range(1,200)) for i in range(n_ads)]
    table['model'] = table['product_id'].map(cars.set_index('product_id').model)
    table['price'] = table['product_id'].map(cars.set_index('product_id').price)
    table['ads_title'] = [' dijual cepat Rp'.join(i) for i in zip(table["model"].map(str),table["price"].map(str))]
    table['date_post'] = [FAKER.date_time_between(start_date=start_date, end_date=end_date) for i in range(n_ads)]
    table.drop(columns=['model','price'],inplace=True)

    # Print table
    if is_print:
        print(table)

    return table
# membuat data table ads
ads = ads_table(100, is_print=True)

def bids_table(n_bids, is_print):

    start_date = datetime(2022, 6, 1)

    end_date = datetime(2022, 12, 31)

    # Buat table
    table = pd.DataFrame()
    table['bid_id'] = [i+1 for i in range(n_bids)]
    table['ads_id'] = [random.choice(range(1,100)) for i in range(n_bids)]
    table['buyer_id'] = [random.choice(range(1,50)) for i in range(n_bids)]
    product_id = table['ads_id'].map(ads.set_index('ads_id').product_id)
    product_price = product_id.map(cars.set_index('product_id').price)
    table['bid_price'] = (product_price * [(random.choice(range(50, 95)) / 100) for i in range(n_bids)]).astype(int)
    table['bid_status'] = 'Sent'
    table['date_bid'] = [FAKER.date_time_between(start_date=start_date, end_date=end_date) for i in range(n_bids)]

    # Print table
    if is_print:
        print(table)

    return table
# membuat data table bids
bids = bids_table(200, is_print=True)

"""
Export data menjadi csv untuk diimport ke Postgres
"""
def export_to_csv(data_frame, file_path):
  if not isinstance(data_frame, pd.DataFrame):
    print('Data frame tidak valid')
  else:
    data_frame.to_csv(file_path, sep=",")
    print('Berhasil menyimpan csv ke folder ' + file_path)

export_to_csv(bids, "/content/drive/MyDrive/csv/bids.csv")
# export_to_csv(sellers, "/content/drive/MyDrive/csv/sellers.csv")
# export_to_csv(buyers, "/content/drive/MyDrive/csv/buyers.csv")
# export_to_csv(cars, "/content/drive/MyDrive/csv/duplicated_cars.csv")
# export_to_csv(ads, "/content/drive/MyDrive/csv/ads.csv")
# export_to_csv(cities, "/content/drive/MyDrive/csv/cities.csv")
# export_to_csv(cars, "/content/drive/MyDrive/csv/cars.csv")